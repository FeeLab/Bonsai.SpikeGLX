{
  "api/Bonsai.SpikeGLX.DigitalOutput.html": {
    "href": "api/Bonsai.SpikeGLX.DigitalOutput.html",
    "title": "Class DigitalOutput | Bonsai - SpikeGLX",
    "keywords": "Class DigitalOutput Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll [Combinator] [WorkflowElementCategory(ElementCategory.Sink)] public class DigitalOutput Inheritance object DigitalOutput Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channels Gets or sets the channels to output the digital signal to. Strings have format \"Dev6/port0/line2,Dev6/port0/line5\". public string Channels { get; set; } Property Value string Host Gets or sets the IP address of the SpikeGLX command server public string Host { get; set; } Property Value string Port Gets or sets the port of the SpikeGLX command server. public int Port { get; set; } Property Value int Methods Process(IObservable<bool>) Set a digital output. public IObservable<int> Process(IObservable<bool> source) Parameters source IObservable<bool> A sequence of bools, each representing a high (true) or low (false) digital state. Returns IObservable<int> An observable sequence that is identical to the source sequence but where there is an additional side effect of setting a digital output. Process(IObservable<double>) Set a digital output. public IObservable<int> Process(IObservable<double> source) Parameters source IObservable<double> A sequence of floats, each representing a high (1.0) or low (0.0) digital state. Returns IObservable<int> An observable sequence that is identical to the source sequence but where there is an additional side effect of setting a digital output. Process(IObservable<int>) Set a digital output. public IObservable<int> Process(IObservable<int> source) Parameters source IObservable<int> A sequence of ints, each representing a high (1) or low (0) digital state. Returns IObservable<int> An observable sequence that is identical to the source sequence but where there is an additional side effect of setting a digital output. Process(IObservable<float>) Set a digital output. public IObservable<int> Process(IObservable<float> source) Parameters source IObservable<float> A sequence of floats, each representing a high (1.0) or low (0.0) digital state. Returns IObservable<int> An observable sequence that is identical to the source sequence but where there is an additional side effect of setting a digital output."
  },
  "api/Bonsai.SpikeGLX.ImecChannelSelector.html": {
    "href": "api/Bonsai.SpikeGLX.ImecChannelSelector.html",
    "title": "Class ImecChannelSelector | Bonsai - SpikeGLX",
    "keywords": "Class ImecChannelSelector Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll Represents an operator that automatically generates a an array of channel indices for SpikeFetch or SpikeStream. [Combinator(MethodName = \"Generate\")] [WorkflowElementCategory(ElementCategory.Source)] public class ImecChannelSelector : Source<int[]> Inheritance object Source<int[]> ImecChannelSelector Inherited Members Source<int[]>.Generate() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channels Gets or sets the channels, represented as a comma separated list of ranges, e.g., \"0:10,15:20\". Ranges includes both ends. public string Channels { get; set; } Property Value string Host Gets or sets the IP address of the SpikeGLX command server public string Host { get; set; } Property Value string MuxedWith Gets or sets the the channel to optionally use to filter the resulting channel array to only those sampled at the same time. public int? MuxedWith { get; set; } Property Value int? Port Gets or sets the port of the SpikeGLX command server. public int Port { get; set; } Property Value int ProbeNumber Gets or sets the IMEC probe number to produce the channel array for. public int ProbeNumber { get; set; } Property Value int Methods Generate() Generates an observanle sequence of a single array of integers, containing channel indicates for a SpikeFetch or SpikeStream marble. public override IObservable<int[]> Generate() Returns IObservable<int[]> A sequence of a single array of integers representing channels for a SpikeFetch or SpikeStream marble."
  },
  "api/Bonsai.SpikeGLX.NeuropixelsMuxGroups.html": {
    "href": "api/Bonsai.SpikeGLX.NeuropixelsMuxGroups.html",
    "title": "Class NeuropixelsMuxGroups | Bonsai - SpikeGLX",
    "keywords": "Class NeuropixelsMuxGroups Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll Represents the constant mux tables for each Neuropixels probe type public static class NeuropixelsMuxGroups Inheritance object NeuropixelsMuxGroups Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields MuxTables public static readonly Dictionary<string, int[][]> MuxTables Field Value Dictionary<string, int[][]>"
  },
  "api/Bonsai.SpikeGLX.SpikeFetch.html": {
    "href": "api/Bonsai.SpikeGLX.SpikeFetch.html",
    "title": "Class SpikeFetch | Bonsai - SpikeGLX",
    "keywords": "Class SpikeFetch Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll Represents an operator that generates a sequence of the latest buffers of data from a SpikeGLX data stream. [Combinator(MethodName = \"Generate\")] [WorkflowElementCategory(ElementCategory.Source)] public class SpikeFetch : Source<Mat> Inheritance object Source<Mat> SpikeFetch Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Channels Gets or sets the array of channels to fetch data from. public int[] Channels { get; set; } Property Value int[] ConvertToVoltage Gets or sets the flag to convert the fetched data from a unitless quantity to a voltage, in volts. public bool ConvertToVoltage { get; set; } Property Value bool Downsample Gets or sets the factor by which fetched data is downsampled. public int Downsample { get; set; } Property Value int FetchLength Gets or sets the duration of fetched data, in ms. public int FetchLength { get; set; } Property Value int FetchPeriod Gets or sets the period at which to fetch data, in ms. Only relevant if no external input is provided. public int FetchPeriod { get; set; } Property Value int HighResolutionTimer Gets or sets the flag to use a high resolution timer (~1ms vs. ~15ms). Only relevant if no external input is provided. public bool HighResolutionTimer { get; set; } Property Value bool Host Gets or sets the IP address of the SpikeGLX command server public string Host { get; set; } Property Value string Port Gets or sets the port of the SpikeGLX command server. public int Port { get; set; } Property Value int StreamType Gets or sets the stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe). public int StreamType { get; set; } Property Value int Substream Gets or sets the substream (0 for NIDAQ, probe number for IMEC Probe). public int Substream { get; set; } Property Value int Methods Generate() Generates an observable sequence of buffers of data fetched from a SpikeGLX data stream. public override IObservable<Mat> Generate() Returns IObservable<Mat> A sequence of OpenCV.Net.Mat objects representing buffers of fetched data from a SpikeGLX data stream. Generate<TSource>(IObservable<TSource>) Generates an observable sequence of buffers of data fetched from a SpikeGLX data stream. public IObservable<Mat> Generate<TSource>(IObservable<TSource> source) Parameters source IObservable<TSource> Input sequence used to trigger fetching. A new buffer is fetched every time the input sequence emits a notification. Returns IObservable<Mat> A sequence of OpenCV.Net.Mat objects representing buffers of fetched data from a SpikeGLX data stream. Type Parameters TSource"
  },
  "api/Bonsai.SpikeGLX.SpikeGLX.html": {
    "href": "api/Bonsai.SpikeGLX.SpikeGLX.html",
    "title": "Class SpikeGLX | Bonsai - SpikeGLX",
    "keywords": "Class SpikeGLX Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll Represents an instance of SpikeGLX communicating with Bonsai. public class SpikeGLX : IDisposable Inheritance object SpikeGLX Implements IDisposable Derived SpikeGLXDataStream Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpikeGLX(string, int) Initialise an instance of SpikeGLX communicating with Bonsai. public SpikeGLX(string host, int port) Parameters host string IP address of the SpikeGLX command server. port int Port of the SpikeGLX command server. Exceptions SpikeGLXException Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool Fetch(out Mat, int, int, ulong, int, int[], int) Fetch data from SpikeGLX. protected ulong Fetch(out Mat data, int js, int ip, ulong startSample, int maxSamples, int[] channels, int downsample) Parameters data Mat Matrix of fetched data. Each row is a channel, each column is a sample. js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe). ip int Substream (0 for NIDAQ, probe number for IMEC Probe). startSample ulong Sample count to fetch from. maxSamples int Maximum number of samples to fetch. channels int[] Channels to fetch data from. downsample int Factor by which to downsample fetched data. Returns ulong Sample count at the beginning of the fetched data. Exceptions SpikeGLXException Fetch(out short[], int, int, ulong, int, int[], int) Fetch data from SpikeGLX. protected ulong Fetch(out short[] data, int js, int ip, ulong startSample, int maxSamples, int[] channels, int downsample) Parameters data short[] Array of fetched data. js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe). ip int Substream (0 for NIDAQ, probe number for IMEC Probe). startSample ulong Sample count to fetch from. maxSamples int Maximum number of samples to fetch. channels int[] Channels to fetch data from. downsample int Factor by which to downsample fetched data. Returns ulong Sample count at the beginning of the fetched data. Exceptions SpikeGLXException FetchLatest(out Mat, int, int, int, int[], int) Fetch the latest data from SpikeGLX. protected ulong FetchLatest(out Mat data, int js, int ip, int maxSamples, int[] channels, int downsample) Parameters data Mat Matrix of fetched data. Each row is a channel, each column is a sample. js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe). ip int Substream (0 for NIDAQ, probe number for IMEC Probe). maxSamples int Maximum number of samples to fetch. channels int[] Channels to fetch data from. downsample int Factor by which to downsample fetched data. Returns ulong Sample count at the beginning of the fetched data. Exceptions SpikeGLXException FetchLatest(out short[], int, int, int, int[], int) Fetch the latest data from SpikeGLX. protected ulong FetchLatest(out short[] data, int js, int ip, int maxSamples, int[] channels, int downsample) Parameters data short[] Array of fetched data. js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe). ip int Substream (0 for NIDAQ, probe number for IMEC Probe). maxSamples int Maximum number of samples to fetch. channels int[] Channels to fetch data from. downsample int Factor by which to downsample fetched data. Returns ulong Sample count at the beginning of the fetched data. Exceptions SpikeGLXException ~SpikeGLX() protected ~SpikeGLX() GetGeomMap(int) Gets SpikeGLX probe geometry map for the given probe number. public string[] GetGeomMap(int ip) Parameters ip int Probe number. Returns string[] String array of geometry parameters. Exceptions SpikeGLXException GetParams() Gets SpikeGLX run parameters. public string[] GetParams() Returns string[] Array of \"key:value\" parameters. Exceptions SpikeGLXException GetParamsImecCommon() Gets SpikeGLX parameters common to all IMEC probes. public string[] GetParamsImecCommon() Returns string[] Array of \"key:value\" parameters. Exceptions SpikeGLXException GetParamsImecProbe(int) Gets SpikeGLX parameters for a given IMEC probe. public string[] GetParamsImecProbe(int ip) Parameters ip int Probe number. Returns string[] Array of \"key:value\" parameters. Exceptions SpikeGLXException GetStreamI16ToVolts(int, int, int) Get the constant multiple for converting a channels output between a unitless integer and a voltage, in volts. protected double GetStreamI16ToVolts(int js, int ip, int chan) Parameters js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe) ip int Substream (0 for NIDAQ, probe number for IMEC Probe) chan int Channel Returns double The multiple to convert the channel output to a voltage, in volts. Exceptions SpikeGLXException GetStreamSampleCount(int, int) Get the number of samples on a given channel protected ulong GetStreamSampleCount(int js, int ip) Parameters js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe) ip int Substream (0 for NIDAQ, probe number for IMEC Probe) Returns ulong The number of samples on the channel. Exceptions SpikeGLXException GetStreamSampleRate(int, int) Get the sample rate of a given data stream. protected double GetStreamSampleRate(int js, int ip) Parameters js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe) ip int Substream (0 for NIDAQ, probe number for IMEC Probe) Returns double The stream sample rate Exceptions SpikeGLXException SetDigitalOut(int, string) Set a digital output through SpikeGLX. public void SetDigitalOut(int output, string channels) Parameters output int The digital output value to set channels string The output channels to set the value of. Channel strings have form: \"Dev6/port0/line2,Dev6/port0/line5\". Exceptions SpikeGLXException TriggerGT(int, int) Control SpikeGLX recording by setting the gate and trigger values. public void TriggerGT(int gate, int trigger) Parameters gate int The gate set value: -1: no change 0: set low 1: set high trigger int The trigger value: -1: no change 0: set low 1: set high Exceptions SpikeGLXException"
  },
  "api/Bonsai.SpikeGLX.SpikeGLXDataStream.html": {
    "href": "api/Bonsai.SpikeGLX.SpikeGLXDataStream.html",
    "title": "Class SpikeGLXDataStream | Bonsai - SpikeGLX",
    "keywords": "Class SpikeGLXDataStream Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll Represents an instance of a single SpikeGLX data stream being accessed from Bonsai. public class SpikeGLXDataStream : SpikeGLX, IDisposable Inheritance object SpikeGLX SpikeGLXDataStream Implements IDisposable Inherited Members SpikeGLX.GetGeomMap(int) SpikeGLX.GetParams() SpikeGLX.GetParamsImecCommon() SpikeGLX.GetParamsImecProbe(int) SpikeGLX.GetStreamSampleRate(int, int) SpikeGLX.GetStreamI16ToVolts(int, int, int) SpikeGLX.GetStreamSampleCount(int, int) SpikeGLX.Fetch(out short[], int, int, ulong, int, int[], int) SpikeGLX.Fetch(out Mat, int, int, ulong, int, int[], int) SpikeGLX.FetchLatest(out short[], int, int, int, int[], int) SpikeGLX.FetchLatest(out Mat, int, int, int, int[], int) SpikeGLX.SetDigitalOut(int, string) SpikeGLX.TriggerGT(int, int) SpikeGLX.Dispose() SpikeGLX.Dispose(bool) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SpikeGLXDataStream(string, int, int, int, int[]) Initialise an instance of a single SpikeGLX data stream communicating with Bonsai. public SpikeGLXDataStream(string host, int port, int js, int ip, int[] channels) Parameters host string IP address of the SpikeGLX command server. port int Port of the SpikeGLX command server. js int Stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe). ip int Substream (0 for NIDAQ, probe number for IMEC Probe). channels int[] Channels to fetch data from. Exceptions SpikeGLXException Fields Channels protected readonly int[] Channels Field Value int[] IP protected readonly int IP Field Value int JS protected readonly int JS Field Value int Mults protected readonly double[] Mults Field Value double[] SampleRate protected readonly double SampleRate Field Value double Methods Fetch(out Mat, ulong, int, int, bool) Fetch data from the SpikeGLX data stream. public ulong Fetch(out Mat data, ulong startSample, int maxSamples, int downsample, bool volts) Parameters data Mat Matrix of fetched data. Each row is a channel, each column is a sample. startSample ulong Sample count to fetch from. maxSamples int Maximum number of samples to fetch. downsample int Factor by which to downsample fetched data. volts bool Convert the data to a voltage, in volts. Returns ulong Sample count at the beginning of the fetched data. Exceptions SpikeGLXException FetchLatest(out Mat, int, int, bool) Fetch the latest data from the SpikeGLX data stream. public ulong FetchLatest(out Mat data, int maxSamples, int downsample, bool volts) Parameters data Mat Matrix of fetched data. Each row is a channel, each column is a sample. maxSamples int Maximum number of samples to fetch. downsample int Factor by which to downsample fetched data. volts bool Convert the data to a voltage, in volts. Returns ulong Sample count at the beginning of the fetched data. Exceptions SpikeGLXException GetStreamSampleCount() Get the number of samples in the data stream. public ulong GetStreamSampleCount() Returns ulong The number of samples in the data stream. GetStreamSampleRate() Get the sample rate of the given data stream. public double GetStreamSampleRate() Returns double The stream sample rate."
  },
  "api/Bonsai.SpikeGLX.SpikeGLXException.html": {
    "href": "api/Bonsai.SpikeGLX.SpikeGLXException.html",
    "title": "Class SpikeGLXException | Bonsai - SpikeGLX",
    "keywords": "Class SpikeGLXException Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll Represents an exception raised during communication with SpikeGLX. [Serializable] public class SpikeGLXException : Exception, ISerializable, _Exception Inheritance object Exception SpikeGLXException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors SpikeGLXException(IntPtr) Represents an exception raised during communication with SpikeGLX. public SpikeGLXException(IntPtr hSglx) Parameters hSglx IntPtr Pointer to the handle for the connection over which the exception occurred."
  },
  "api/Bonsai.SpikeGLX.SpikeStream.html": {
    "href": "api/Bonsai.SpikeGLX.SpikeStream.html",
    "title": "Class SpikeStream | Bonsai - SpikeGLX",
    "keywords": "Class SpikeStream Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll Represents an operator that streams buffers of data from a SpikeGLX data stream. [Combinator(MethodName = \"Generate\")] [WorkflowElementCategory(ElementCategory.Source)] public class SpikeStream : Source<Mat> Inheritance object Source<Mat> SpikeStream Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties BufferLength Gets or sets the duration of streamed data buffers, in ms. public int BufferLength { get; set; } Property Value int Channels Gets or sets the array of channels to fetch data from. public int[] Channels { get; set; } Property Value int[] ConvertToVoltage Gets or sets the flag to convert the streamed data from a unitless quantity to a voltage, in volts. public bool ConvertToVoltage { get; set; } Property Value bool Downsample Gets or sets the factor by which streamed data is downsampled. public int Downsample { get; set; } Property Value int HighResolutionTimer Gets or sets the flag to use a high resolution timer (~1ms vs. ~15ms). public bool HighResolutionTimer { get; set; } Property Value bool Host Gets or sets the IP address of the SpikeGLX command server public string Host { get; set; } Property Value string Port Gets or sets the port of the SpikeGLX command server. public int Port { get; set; } Property Value int StreamType Gets or sets the stream type (0: NIDAQ, 1: Onebox, 2: IMEC Probe). public int StreamType { get; set; } Property Value int Substream Gets or sets the substream (0 for NIDAQ, probe number for IMEC Probe). public int Substream { get; set; } Property Value int Methods Generate() Generates an observable sequence of buffers of data streamed from a SpikeGLX data stream. public override IObservable<Mat> Generate() Returns IObservable<Mat> A sequence of OpenCV.Net.Mat objects representing buffers of streamed data from a SpikeGLX data stream."
  },
  "api/Bonsai.SpikeGLX.TriggerRecording.html": {
    "href": "api/Bonsai.SpikeGLX.TriggerRecording.html",
    "title": "Class TriggerRecording | Bonsai - SpikeGLX",
    "keywords": "Class TriggerRecording Namespace Bonsai.SpikeGLX Assembly Bonsai.SpikeGLX.dll [Combinator] [WorkflowElementCategory(ElementCategory.Sink)] public class TriggerRecording Inheritance object TriggerRecording Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Host Gets or sets the IP address of the SpikeGLX command server public string Host { get; set; } Property Value string Port Gets or sets the port of the SpikeGLX command server. public int Port { get; set; } Property Value int Methods Process(IObservable<Tuple<int, int>>) Sets the gate and trigger values in SpikeGLX public IObservable<Tuple<int, int>> Process(IObservable<Tuple<int, int>> source) Parameters source IObservable<Tuple<int, int>> A sequence of Tuples of two Ints used to set the gate and trigger (in that order). -1: no change 0: set low 1: set high Returns IObservable<Tuple<int, int>> An observable sequence that is identical to the source sequence but where there is an additional side effect of setting the gate and trigger values in SpikeGLX."
  },
  "api/Bonsai.SpikeGLX.html": {
    "href": "api/Bonsai.SpikeGLX.html",
    "title": "Namespace Bonsai.SpikeGLX | Bonsai - SpikeGLX",
    "keywords": "Namespace Bonsai.SpikeGLX Classes DigitalOutput ImecChannelSelector Represents an operator that automatically generates a an array of channel indices for SpikeFetch or SpikeStream. NeuropixelsMuxGroups Represents the constant mux tables for each Neuropixels probe type SpikeFetch Represents an operator that generates a sequence of the latest buffers of data from a SpikeGLX data stream. SpikeGLX Represents an instance of SpikeGLX communicating with Bonsai. SpikeGLXDataStream Represents an instance of a single SpikeGLX data stream being accessed from Bonsai. SpikeGLXException Represents an exception raised during communication with SpikeGLX. SpikeStream Represents an operator that streams buffers of data from a SpikeGLX data stream. TriggerRecording"
  },
  "api/C_Sglx_namespace.C_Sglx.ProgressCallback.html": {
    "href": "api/C_Sglx_namespace.C_Sglx.ProgressCallback.html",
    "title": "Delegate C_Sglx.ProgressCallback | Bonsai - SpikeGLX",
    "keywords": "Delegate C_Sglx.ProgressCallback Namespace C_Sglx_namespace Assembly Bonsai.SpikeGLX.dll public delegate void C_Sglx.ProgressCallback(IntPtr status) Parameters status IntPtr"
  },
  "api/C_Sglx_namespace.C_Sglx.html": {
    "href": "api/C_Sglx_namespace.C_Sglx.html",
    "title": "Class C_Sglx | Bonsai - SpikeGLX",
    "keywords": "Class C_Sglx Namespace C_Sglx_namespace Assembly Bonsai.SpikeGLX.dll public class C_Sglx Inheritance object C_Sglx Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods c_sglx_close(IntPtr) public static extern int c_sglx_close(IntPtr hSglx) Parameters hSglx IntPtr Returns int c_sglx_connect(IntPtr, string, int) public static extern int c_sglx_connect(IntPtr hSglx, string host, int port) Parameters hSglx IntPtr host string port int Returns int c_sglx_consoleHide(IntPtr) public static extern int c_sglx_consoleHide(IntPtr hSglx) Parameters hSglx IntPtr Returns int c_sglx_consoleShow(IntPtr) public static extern int c_sglx_consoleShow(IntPtr hSglx) Parameters hSglx IntPtr Returns int c_sglx_createHandle() public static extern IntPtr c_sglx_createHandle() Returns IntPtr c_sglx_destroyHandle(IntPtr) public static extern void c_sglx_destroyHandle(IntPtr hSglx) Parameters hSglx IntPtr c_sglx_enumDataDir(out int, IntPtr, int) public static extern int c_sglx_enumDataDir(out int nval, IntPtr hSglx, int idir) Parameters nval int hSglx IntPtr idir int Returns int c_sglx_getGeomMap(out int, IntPtr, int) public static extern int c_sglx_getGeomMap(out int nval, IntPtr hSglx, int ip) Parameters nval int hSglx IntPtr ip int Returns int c_sglx_getImecChanGains(out double, out double, IntPtr, int, int) public static extern int c_sglx_getImecChanGains(out double APgain, out double LFgain, IntPtr hSglx, int ip, int chan) Parameters APgain double LFgain double hSglx IntPtr ip int chan int Returns int c_sglx_getNIShankMap(out int, IntPtr) public static extern int c_sglx_getNIShankMap(out int nval, IntPtr hSglx) Parameters nval int hSglx IntPtr Returns int c_sglx_getParams(out int, IntPtr) public static extern int c_sglx_getParams(out int nval, IntPtr hSglx) Parameters nval int hSglx IntPtr Returns int c_sglx_getParamsImecCommon(out int, IntPtr) public static extern int c_sglx_getParamsImecCommon(out int nval, IntPtr hSglx) Parameters nval int hSglx IntPtr Returns int c_sglx_getParamsImecProbe(out int, IntPtr, int) public static extern int c_sglx_getParamsImecProbe(out int nval, IntPtr hSglx, int ip) Parameters nval int hSglx IntPtr ip int Returns int c_sglx_getParamsOneBox(out int, IntPtr, int) public static extern int c_sglx_getParamsOneBox(out int nval, IntPtr hSglx, int ip) Parameters nval int hSglx IntPtr ip int Returns int c_sglx_getStreamAcqChans(out int, IntPtr, int, int) public static extern int c_sglx_getStreamAcqChans(out int nval, IntPtr hSglx, int js, int ip) Parameters nval int hSglx IntPtr js int ip int Returns int c_sglx_getStreamFileStart(IntPtr, int, int) public static extern ulong c_sglx_getStreamFileStart(IntPtr hSglx, int js, int ip) Parameters hSglx IntPtr js int ip int Returns ulong c_sglx_getStreamI16ToVolts(out double, IntPtr, int, int, int) public static extern int c_sglx_getStreamI16ToVolts(out double mult, IntPtr hSglx, int js, int ip, int chan) Parameters mult double hSglx IntPtr js int ip int chan int Returns int c_sglx_getStreamMaxInt(out int, IntPtr, int, int) public static extern int c_sglx_getStreamMaxInt(out int maxInt, IntPtr hSglx, int js, int ip) Parameters maxInt int hSglx IntPtr js int ip int Returns int c_sglx_getStreamNP(out int, IntPtr, int) public static extern int c_sglx_getStreamNP(out int np, IntPtr hSglx, int js) Parameters np int hSglx IntPtr js int Returns int c_sglx_getStreamSampleCount(IntPtr, int, int) public static extern ulong c_sglx_getStreamSampleCount(IntPtr hSglx, int js, int ip) Parameters hSglx IntPtr js int ip int Returns ulong c_sglx_getStreamSampleRate(IntPtr, int, int) public static extern double c_sglx_getStreamSampleRate(IntPtr hSglx, int js, int ip) Parameters hSglx IntPtr js int ip int Returns double c_sglx_getStreamSaveChans(out int, IntPtr, int, int) public static extern int c_sglx_getStreamSaveChans(out int nval, IntPtr hSglx, int js, int ip) Parameters nval int hSglx IntPtr js int ip int Returns int c_sglx_getStreamVoltageRange(out double, out double, IntPtr, int, int) public static extern int c_sglx_getStreamVoltageRange(out double vMin, out double vMax, IntPtr hSglx, int js, int ip) Parameters vMin double vMax double hSglx IntPtr js int ip int Returns int c_sglx_getTime(IntPtr) public static extern double c_sglx_getTime(IntPtr hSglx) Parameters hSglx IntPtr Returns double c_sglx_getdbl(IntPtr, int) public static extern double c_sglx_getdbl(IntPtr hSglx, int ith) Parameters hSglx IntPtr ith int Returns double c_sglx_getint(IntPtr, int) public static extern int c_sglx_getint(IntPtr hSglx, int ith) Parameters hSglx IntPtr ith int Returns int c_sglx_isConsoleHidden(out byte, IntPtr) public static extern int c_sglx_isConsoleHidden(out byte hidden, IntPtr hSglx) Parameters hidden byte hSglx IntPtr Returns int c_sglx_isInitialized(out byte, IntPtr) public static extern int c_sglx_isInitialized(out byte ready, IntPtr hSglx) Parameters ready byte hSglx IntPtr Returns int c_sglx_isRunning(out byte, IntPtr) public static extern int c_sglx_isRunning(out byte running, IntPtr hSglx) Parameters running byte hSglx IntPtr Returns int c_sglx_isSaving(out byte, IntPtr) public static extern int c_sglx_isSaving(out byte saving, IntPtr hSglx) Parameters saving byte hSglx IntPtr Returns int c_sglx_isUserOrder(out byte, IntPtr, int, int) public static extern int c_sglx_isUserOrder(out byte userOrder, IntPtr hSglx, int js, int ip) Parameters userOrder byte hSglx IntPtr js int ip int Returns int c_sglx_mapSample(IntPtr, int, int, ulong, int, int) public static extern ulong c_sglx_mapSample(IntPtr hSglx, int dstjs, int dstip, ulong srcSample, int srcjs, int srcip) Parameters hSglx IntPtr dstjs int dstip int srcSample ulong srcjs int srcip int Returns ulong c_sglx_opto_emit(IntPtr, int, int, int) public static extern int c_sglx_opto_emit(IntPtr hSglx, int ip, int color, int site) Parameters hSglx IntPtr ip int color int site int Returns int c_sglx_opto_getAttenuations(out int, IntPtr, int, int) public static extern int c_sglx_opto_getAttenuations(out int nval, IntPtr hSglx, int ip, int color) Parameters nval int hSglx IntPtr ip int color int Returns int c_sglx_par2(ProgressCallback, IntPtr, char, string) public static extern int c_sglx_par2(C_Sglx.ProgressCallback callback, IntPtr hSglx, char op, string file) Parameters callback C_Sglx.ProgressCallback hSglx IntPtr op char file string Returns int c_sglx_setAnatomy_Pinpoint(IntPtr, string) public static extern int c_sglx_setAnatomy_Pinpoint(IntPtr hSglx, string shankdat) Parameters hSglx IntPtr shankdat string Returns int c_sglx_setAudioEnable(IntPtr, int) public static extern int c_sglx_setAudioEnable(IntPtr hSglx, int enable) Parameters hSglx IntPtr enable int Returns int c_sglx_setAudioKVParams(IntPtr, string) public static extern int c_sglx_setAudioKVParams(IntPtr hSglx, string group) Parameters hSglx IntPtr group string Returns int c_sglx_setDataDir(IntPtr, int, string) public static extern int c_sglx_setDataDir(IntPtr hSglx, int idir, string dir) Parameters hSglx IntPtr idir int dir string Returns int c_sglx_setDigitalOut(IntPtr, int, string) public static extern int c_sglx_setDigitalOut(IntPtr hSglx, int hi_lo, string channels) Parameters hSglx IntPtr hi_lo int channels string Returns int c_sglx_setKVMetadata(IntPtr) public static extern int c_sglx_setKVMetadata(IntPtr hSglx) Parameters hSglx IntPtr Returns int c_sglx_setKVParams(IntPtr) public static extern int c_sglx_setKVParams(IntPtr hSglx) Parameters hSglx IntPtr Returns int c_sglx_setKVParamsImecCommon(IntPtr) public static extern int c_sglx_setKVParamsImecCommon(IntPtr hSglx) Parameters hSglx IntPtr Returns int c_sglx_setKVParamsImecProbe(IntPtr, int) public static extern int c_sglx_setKVParamsImecProbe(IntPtr hSglx, int ip) Parameters hSglx IntPtr ip int Returns int c_sglx_setKVParamsOneBox(IntPtr, int) public static extern int c_sglx_setKVParamsOneBox(IntPtr hSglx, int ip) Parameters hSglx IntPtr ip int Returns int c_sglx_setMultiDriveEnable(IntPtr, int) public static extern int c_sglx_setMultiDriveEnable(IntPtr hSglx, int enable) Parameters hSglx IntPtr enable int Returns int c_sglx_setNextFileName(IntPtr, string) public static extern int c_sglx_setNextFileName(IntPtr hSglx, string name) Parameters hSglx IntPtr name string Returns int c_sglx_setRecordingEnable(IntPtr, int) public static extern int c_sglx_setRecordingEnable(IntPtr hSglx, int enable) Parameters hSglx IntPtr enable int Returns int c_sglx_setRunName(IntPtr, string) public static extern int c_sglx_setRunName(IntPtr hSglx, string name) Parameters hSglx IntPtr name string Returns int c_sglx_setTriggerOffBeep(IntPtr, int, int) public static extern int c_sglx_setTriggerOffBeep(IntPtr hSglx, int hertz, int millisec) Parameters hSglx IntPtr hertz int millisec int Returns int c_sglx_setTriggerOnBeep(IntPtr, int, int) public static extern int c_sglx_setTriggerOnBeep(IntPtr hSglx, int hertz, int millisec) Parameters hSglx IntPtr hertz int millisec int Returns int c_sglx_setkv(IntPtr, string, string) public static extern void c_sglx_setkv(IntPtr hSglx, string key, string value) Parameters hSglx IntPtr key string value string c_sglx_startRun(IntPtr, string) public static extern int c_sglx_startRun(IntPtr hSglx, string name = \"\") Parameters hSglx IntPtr name string Returns int c_sglx_stopRun(IntPtr) public static extern int c_sglx_stopRun(IntPtr hSglx) Parameters hSglx IntPtr Returns int c_sglx_triggerGT(IntPtr, int, int) public static extern int c_sglx_triggerGT(IntPtr hSglx, int g, int t) Parameters hSglx IntPtr g int t int Returns int c_sglx_verifySha1(ProgressCallback, IntPtr, string) public static extern int c_sglx_verifySha1(C_Sglx.ProgressCallback callback, IntPtr hSglx, string filename) Parameters callback C_Sglx.ProgressCallback hSglx IntPtr filename string Returns int cs_demoCallback(IntPtr) public static void cs_demoCallback(IntPtr status) Parameters status IntPtr cs_sglx_fetch(out short[], IntPtr, int, int, ulong, int, int[], int) public static ulong cs_sglx_fetch(out short[] data, IntPtr hSglx, int js, int ip, ulong start_samp, int max_samps, int[] chan_subset, int downsamp) Parameters data short[] hSglx IntPtr js int ip int start_samp ulong max_samps int chan_subset int[] downsamp int Returns ulong cs_sglx_fetchLatest(out short[], IntPtr, int, int, int, int[], int) public static ulong cs_sglx_fetchLatest(out short[] data, IntPtr hSglx, int js, int ip, int max_samps, int[] chan_subset, int downsamp) Parameters data short[] hSglx IntPtr js int ip int max_samps int chan_subset int[] downsamp int Returns ulong cs_sglx_getDataDir(out string, IntPtr, int) public static int cs_sglx_getDataDir(out string dir, IntPtr hSglx, int idir = 0) Parameters dir string hSglx IntPtr idir int Returns int cs_sglx_getError(IntPtr) public static string cs_sglx_getError(IntPtr hSglx) Parameters hSglx IntPtr Returns string cs_sglx_getProbeList(out string, IntPtr) public static int cs_sglx_getProbeList(out string list, IntPtr hSglx) Parameters list string hSglx IntPtr Returns int cs_sglx_getRunName(out string, IntPtr) public static int cs_sglx_getRunName(out string name, IntPtr hSglx) Parameters name string hSglx IntPtr Returns int cs_sglx_getStreamSN(out int, out string, IntPtr, int, int) public static int cs_sglx_getStreamSN(out int slot_or_type, out string SN, IntPtr hSglx, int js, int ip) Parameters slot_or_type int SN string hSglx IntPtr js int ip int Returns int cs_sglx_getVersion(IntPtr) public static string cs_sglx_getVersion(IntPtr hSglx) Parameters hSglx IntPtr Returns string cs_sglx_getstr(IntPtr, int) public static string cs_sglx_getstr(IntPtr hSglx, int ith) Parameters hSglx IntPtr ith int Returns string"
  },
  "api/C_Sglx_namespace.html": {
    "href": "api/C_Sglx_namespace.html",
    "title": "Namespace C_Sglx_namespace | Bonsai - SpikeGLX",
    "keywords": "Namespace C_Sglx_namespace Classes C_Sglx Delegates C_Sglx.ProgressCallback"
  },
  "articles/getting-started.html": {
    "href": "articles/getting-started.html",
    "title": "Getting Started | Bonsai - SpikeGLX",
    "keywords": "Getting Started"
  },
  "articles/introduction.html": {
    "href": "articles/introduction.html",
    "title": "Introduction | Bonsai - SpikeGLX",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Bonsai - SpikeGLX",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}